<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Daily Report End to End Suit" time="253.172" tests="1" failures="1" errors="0">
   <testsuite name="Daily Report End to End Suit" tests="1" failures="1" errors="0" time="253.172" timestamp="2020-03-17 15:26:38" hostname="bksangani - aixahm-ts6.analytix.local" id="Test Suites/Daily Report End to End Suit">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="D:\\Users\\bksangani\\Katalon Studio\\ReportBuilderV1\\Reports\\20200317_152635\\Daily Report End to End Suit\\20200317_152635"/>
         <property name="logFiles" value="D:\\Users\\bksangani\\Katalon Studio\\ReportBuilderV1\\Reports\\20200317_152635\\Daily Report End to End Suit\\20200317_152635\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="bksangani - aixahm-ts6.analytix.local"/>
         <property name="os" value="Windows Server 2016 64bit"/>
         <property name="katalonVersion" value="7.2.1.1"/>
         <property name="browser" value="Chrome 80.0.3987.132"/>
         <property name="hostAddress" value="192.168.16.190"/>
         <property name="sessionId" value="d529f8ecdaca8a543adab683ea036161"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0, executionList=}"/>
         <property name="platform" value="Windows Server 2016"/>
      </properties>
      <testcase name="Test Cases/CrossLocationReportBuilder_TestCases/TC8_Create Daily Report with valid details and compare report values with calender for specific time period" time="227.055" classname="Test Cases/CrossLocationReportBuilder_TestCases/TC8_Create Daily Report with valid details and compare report values with calender for specific time period" status="FAILED">
         <failure type="FAILED" message="Test Cases/CrossLocationReportBuilder_TestCases/TC8_Create Daily Report with valid details and compare report values with calender for specific time period FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' (Root cause: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:70)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
"/>
         <system-out><![CDATA[2020-03-17 15:26:56 - [TEST_CASE][FAILED] - Test Cases/CrossLocationReportBuilder_TestCases/TC8_Create Daily Report with valid details and compare report values with calender for specific time period: Test Cases/CrossLocationReportBuilder_TestCases/TC8_Create Daily Report with valid details and compare report values with calender for specific time period FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' (Root cause: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:70)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more


2020-03-17 15:26:57 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CrossLocationReportBuilder_TestCases/TC1_Verify successfull login"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/CrossLocationReportBuilder_TestCases/TC1_Verify successfull login' successfully

2020-03-17 15:26:57 - [TEST_CASE][PASSED] - Test Cases/CrossLocationReportBuilder_TestCases/TC1_Verify successfull login: Test Cases/CrossLocationReportBuilder_TestCases/TC1_Verify successfull login

2020-03-17 15:26:57 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/LoginPage/Login with encrypted username and password"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/LoginPage/Login with encrypted username and password' successfully

2020-03-17 15:26:57 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/LoginPage/Login with encrypted username and password: Test Cases/ReportBuilder_Pages/LoginPage/Login with encrypted username and password

2020-03-17 15:26:57 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_Dunkin Donuts - Executive Dashboard/input_Login_textBoxEmailAddress"), username): Text 'Cafua_Dev@analytix.com' is set on object 'Object Repository/Page_Dunkin Donuts - Executive Dashboard/input_Login_textBoxEmailAddress'

2020-03-17 15:26:58 - [MESSAGE][PASSED] - Text 'Cafua_Dev@analytix.com' is set on object 'Object Repository/Page_Dunkin Donuts - Executive Dashboard/input_Login_textBoxEmailAddress'

2020-03-17 15:26:58 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Page_Dunkin Donuts - Executive Dashboard/input_Login_textBoxPassword"), password): Text '!9TgLT8dK3' is set on object 'Object Repository/Page_Dunkin Donuts - Executive Dashboard/input_Login_textBoxPassword'

2020-03-17 15:26:59 - [MESSAGE][PASSED] - Text '!9TgLT8dK3' is set on object 'Object Repository/Page_Dunkin Donuts - Executive Dashboard/input_Login_textBoxPassword'

2020-03-17 15:26:59 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Page_Dunkin Donuts - Executive Dashboard/input_Login_buttonLogin")): Object: 'Object Repository/Page_Dunkin Donuts - Executive Dashboard/input_Login_buttonLogin' is clicked on

2020-03-17 15:26:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Dunkin Donuts - Executive Dashboard/input_Login_buttonLogin' is clicked on

2020-03-17 15:26:59 - [TEST_STEP][NOT_RUN] - waitForElementClickable(findTestObject("Page_Restaurant Intranet/link_ProfileIcon"), ExplicitWait): NOT_RUN: waitForElementClickable(findTestObject("Page_Restaurant Intranet/link_ProfileIcon"), ExplicitWait)

2020-03-17 15:26:59 - [MESSAGE][NOT_RUN] - NOT_RUN: waitForElementClickable(findTestObject("Page_Restaurant Intranet/link_ProfileIcon"), ExplicitWait)

2020-03-17 15:26:59 - [TEST_STEP][NOT_RUN] - verifyElementVisible(findTestObject("Page_Restaurant Intranet/link_ProfileIcon")): NOT_RUN: verifyElementVisible(findTestObject("Page_Restaurant Intranet/link_ProfileIcon"))

2020-03-17 15:26:59 - [MESSAGE][NOT_RUN] - NOT_RUN: verifyElementVisible(findTestObject("Page_Restaurant Intranet/link_ProfileIcon"))

2020-03-17 15:26:59 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/LoginPage/Login with encrypted username and password' successfully

2020-03-17 15:26:59 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CrossLocationReportBuilder_TestCases/TC1_Verify successfull login' successfully

2020-03-17 15:26:59 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CrossLocationReportBuilder_TestCases/TC3_Verify Report Builder Link functionality"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/CrossLocationReportBuilder_TestCases/TC3_Verify Report Builder Link functionality' successfully

2020-03-17 15:26:59 - [TEST_CASE][PASSED] - Test Cases/CrossLocationReportBuilder_TestCases/TC3_Verify Report Builder Link functionality: Test Cases/CrossLocationReportBuilder_TestCases/TC3_Verify Report Builder Link functionality

2020-03-17 15:26:59 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Verify and Click on Report Builder link from profile"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Verify and Click on Report Builder link from profile' successfully

2020-03-17 15:26:59 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Verify and Click on Report Builder link from profile: Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Verify and Click on Report Builder link from profile

2020-03-17 15:27:00 - [TEST_STEP][NOT_RUN] - waitForElementPresent(findTestObject("Page_Restaurant Intranet/Setup/tasterMessage"), 20): NOT_RUN: waitForElementPresent(findTestObject("Page_Restaurant Intranet/Setup/tasterMessage"), 20)

2020-03-17 15:27:00 - [MESSAGE][NOT_RUN] - NOT_RUN: waitForElementPresent(findTestObject("Page_Restaurant Intranet/Setup/tasterMessage"), 20)

2020-03-17 15:27:00 - [TEST_STEP][NOT_RUN] - waitForElementNotPresent(findTestObject("Page_Restaurant Intranet/Setup/tasterMessage"), 10): NOT_RUN: waitForElementNotPresent(findTestObject("Page_Restaurant Intranet/Setup/tasterMessage"), 10)

2020-03-17 15:27:00 - [MESSAGE][NOT_RUN] - NOT_RUN: waitForElementNotPresent(findTestObject("Page_Restaurant Intranet/Setup/tasterMessage"), 10)

2020-03-17 15:27:00 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2020-03-17 15:27:03 - [MESSAGE][PASSED] - Delayed 3 second(s)

2020-03-17 15:27:03 - [TEST_STEP][PASSED] - mouseOver(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_CrossLocationReportIcon")): Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_CrossLocationReportIcon' is hovered

2020-03-17 15:27:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_CrossLocationReportIcon' is hovered

2020-03-17 15:27:32 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_Setup"), ExplicitWait): Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_Setup' is clickable

2020-03-17 15:27:33 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_Setup' is clickable

2020-03-17 15:27:33 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_Setup"), 0): Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_Setup' is present

2020-03-17 15:27:33 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2020-03-17 15:27:33 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_Setup' is present

2020-03-17 15:27:33 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_Setup")): Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_Setup' is clicked on

2020-03-17 15:27:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_Setup' is clicked on

2020-03-17 15:27:34 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink"), ExplicitWait): Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink' is clickable

2020-03-17 15:27:34 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink' is clickable

2020-03-17 15:27:34 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink"), 0): Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink' is present

2020-03-17 15:27:34 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2020-03-17 15:27:35 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink' is present

2020-03-17 15:27:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink' is clicked on

2020-03-17 15:27:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink' is clicked on

2020-03-17 15:27:35 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Verify and Click on Report Builder link from profile' successfully

2020-03-17 15:27:35 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CrossLocationReportBuilder_TestCases/TC3_Verify Report Builder Link functionality' successfully

2020-03-17 15:27:35 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/ReportSetup_Page/Verify Add Report button and Click"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/ReportSetup_Page/Verify Add Report button and Click' successfully

2020-03-17 15:27:35 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/ReportSetup_Page/Verify Add Report button and Click: Test Cases/ReportBuilder_Pages/ReportSetup_Page/Verify Add Report button and Click

2020-03-17 15:27:35 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink"), 0): Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink' is present

2020-03-17 15:27:35 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2020-03-17 15:27:36 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink' is present

2020-03-17 15:27:36 - [TEST_STEP][NOT_RUN] - click(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink"), CONTINUE_ON_FAILURE): NOT_RUN: click(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink"), CONTINUE_ON_FAILURE)

2020-03-17 15:27:36 - [MESSAGE][NOT_RUN] - NOT_RUN: click(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/div_ReportBuilderLink"), CONTINUE_ON_FAILURE)

2020-03-17 15:27:36 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("ReportBuilderUI/div_Report Setup"), ExplicitWait): Object 'Object Repository/ReportBuilderUI/div_Report Setup' is clickable

2020-03-17 15:27:36 - [MESSAGE][PASSED] - Object 'Object Repository/ReportBuilderUI/div_Report Setup' is clickable

2020-03-17 15:27:36 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/div_Report Setup")): Object: 'Object Repository/ReportBuilderUI/div_Report Setup' is clicked on

2020-03-17 15:27:36 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/div_Report Setup' is clicked on

2020-03-17 15:27:36 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("ReportBuilderUI/button_Add"), 30): Object 'Object Repository/ReportBuilderUI/button_Add' is clickable

2020-03-17 15:27:37 - [MESSAGE][PASSED] - Object 'Object Repository/ReportBuilderUI/button_Add' is clickable

2020-03-17 15:27:37 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/button_Add")): Object: 'Object Repository/ReportBuilderUI/button_Add' is clicked on

2020-03-17 15:27:38 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/button_Add' is clicked on

2020-03-17 15:27:38 - [TEST_STEP][PASSED] - verifyTextPresent("Cross Location Report Builder", false): Text 'Cross Location Report Builder' is present on page 

2020-03-17 15:27:39 - [MESSAGE][PASSED] - Text 'Cross Location Report Builder' is present on page 

2020-03-17 15:27:39 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/ReportSetup_Page/Verify Add Report button and Click' successfully

2020-03-17 15:27:39 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Give Report Name"), ["ReportName":ReportName], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Give Report Name' successfully

2020-03-17 15:27:39 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Give Report Name: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Give Report Name

2020-03-17 15:27:39 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Name Your Report/input_Reports_form-item")): Object: 'Object Repository/ReportSetupScreen/Name Your Report/input_Reports_form-item' is clicked on

2020-03-17 15:27:39 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Name Your Report/input_Reports_form-item' is clicked on

2020-03-17 15:27:39 - [TEST_STEP][PASSED] - setText(findTestObject("ReportSetupScreen/Name Your Report/input_Reports_form-item"), ReportName): Text 'Daily Sales' is set on object 'Object Repository/ReportSetupScreen/Name Your Report/input_Reports_form-item'

2020-03-17 15:27:40 - [MESSAGE][PASSED] - Text 'Daily Sales' is set on object 'Object Repository/ReportSetupScreen/Name Your Report/input_Reports_form-item'

2020-03-17 15:27:40 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Give Report Name' successfully

2020-03-17 15:27:40 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Select Report Category"), ["ReportCategory":CategoryName], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Select Report Category' successfully

2020-03-17 15:27:40 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Select Report Category: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Select Report Category

2020-03-17 15:27:40 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2020-03-17 15:27:40 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Name Your Report/input_Report Name_form-item ng-untouched ng-pristine ng-invalid")): Object: 'Object Repository/ReportSetupScreen/Name Your Report/input_Report Name_form-item ng-untouched ng-pristine ng-invalid' is clicked on

2020-03-17 15:27:41 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Name Your Report/input_Report Name_form-item ng-untouched ng-pristine ng-invalid' is clicked on

2020-03-17 15:27:41 - [TEST_STEP][PASSED] - setText(findTestObject("ReportSetupScreen/Name Your Report/input_SelectCategory"), ReportCategory): Text 'Sales/Controllables' is set on object 'Object Repository/ReportSetupScreen/Name Your Report/input_SelectCategory'

2020-03-17 15:27:42 - [MESSAGE][PASSED] - Text 'Sales/Controllables' is set on object 'Object Repository/ReportSetupScreen/Name Your Report/input_SelectCategory'

2020-03-17 15:27:42 - [TEST_STEP][PASSED] - CategoryName = ReportCategory: null

2020-03-17 15:27:42 - [TEST_STEP][PASSED] - fields = driver.findElement(By.xpath("//span[text()="" + CategoryName + ""]")): null

2020-03-17 15:27:42 - [TEST_STEP][PASSED] - fields.click(): null

2020-03-17 15:27:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2020-03-17 15:27:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2020-03-17 15:27:43 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Select Report Category' successfully

2020-03-17 15:27:43 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Data Grain with Present Data By/Select Data Grain And Present Data By options for Report"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Data Grain with Present Data By/Select Data Grain And Present Data By options for Report' successfully

2020-03-17 15:27:43 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Data Grain with Present Data By/Select Data Grain And Present Data By options for Report: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Data Grain with Present Data By/Select Data Grain And Present Data By options for Report

2020-03-17 15:27:44 - [TEST_STEP][PASSED] - DataGrain = DataGrain: null

2020-03-17 15:27:44 - [TEST_STEP][PASSED] - PresentBy = PresentBy: null

2020-03-17 15:27:44 - [TEST_STEP][PASSED] - if (DataGrain.equalsIgnoreCase("Daily") && PresentBy.equalsIgnoreCase("Day")): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Hours -Daily Data Grain' successfully

2020-03-17 15:27:44 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Data Grain with Present Data By/Grain By Daily with Present By Day"), ["NoOfdays":NoOfDays], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Data Grain with Present Data By/Grain By Daily with Present By Day' successfully

2020-03-17 15:27:44 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Data Grain with Present Data By/Grain By Daily with Present By Day: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Data Grain with Present Data By/Grain By Daily with Present By Day

2020-03-17 15:27:44 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Data Grain/button_Daily")): Object: 'Object Repository/ReportSetupScreen/Data Grain/button_Daily' is clicked on

2020-03-17 15:27:44 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Data Grain/button_Daily' is clicked on

2020-03-17 15:27:44 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Present Data By/button_Day")): Object: 'Object Repository/ReportSetupScreen/Present Data By/button_Day' is clicked on

2020-03-17 15:27:45 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Present Data By/button_Day' is clicked on

2020-03-17 15:27:45 - [TEST_STEP][PASSED] - setText(findTestObject("ReportSetupScreen/Present Data By/input_Limit no of days_form-item ng-untouched ng-pristine ng-invalid"), NoOfdays): Text '35' is set on object 'Object Repository/ReportSetupScreen/Present Data By/input_Limit no of days_form-item ng-untouched ng-pristine ng-invalid'

2020-03-17 15:27:45 - [MESSAGE][PASSED] - Text '35' is set on object 'Object Repository/ReportSetupScreen/Present Data By/input_Limit no of days_form-item ng-untouched ng-pristine ng-invalid'

2020-03-17 15:27:45 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Data Grain with Present Data By/Grain By Daily with Present By Day' successfully

2020-03-17 15:27:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Net Sales - Daily Data Grain"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Net Sales - Daily Data Grain' successfully

2020-03-17 15:27:45 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Net Sales - Daily Data Grain: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Net Sales - Daily Data Grain

2020-03-17 15:27:46 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/link_Add Columns")): Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:27:46 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:27:46 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/drp_DataGroup")): Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:27:47 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:27:47 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("ReportSetupScreen/DataGroupValues/Net Sales(DWM)/tupple_Net_Sales")): Object 'Object Repository/ReportSetupScreen/DataGroupValues/Net Sales(DWM)/tupple_Net_Sales' is clickable

2020-03-17 15:27:47 - [MESSAGE][PASSED] - Object 'Object Repository/ReportSetupScreen/DataGroupValues/Net Sales(DWM)/tupple_Net_Sales' is clickable

2020-03-17 15:27:47 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Net Sales(DWM)/tupple_Net_Sales")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Net Sales(DWM)/tupple_Net_Sales' is clicked on

2020-03-17 15:27:48 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Net Sales(DWM)/tupple_Net_Sales' is clicked on

2020-03-17 15:27:48 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:27:48 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:27:48 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:27:49 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:27:49 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2020-03-17 15:27:51 - [MESSAGE][PASSED] - Delayed 2 second(s)

2020-03-17 15:27:51 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2020-03-17 15:27:51 - [TEST_STEP][PASSED] - element = driver.findElement(By.xpath("//button[text()='Add Columns(s)']")): null

2020-03-17 15:27:51 - [TEST_STEP][PASSED] - executor = driver: null

2020-03-17 15:27:51 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].click();", element): null

2020-03-17 15:27:51 - [TEST_STEP][PASSED] - if (!(xpath("//span[text()='Add Columns']")).size() != 0)): null

2020-03-17 15:27:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Net Sales - Daily Data Grain' successfully

2020-03-17 15:27:52 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Guest Count- Daily Data Grain"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Guest Count- Daily Data Grain' successfully

2020-03-17 15:27:52 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Guest Count- Daily Data Grain: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Guest Count- Daily Data Grain

2020-03-17 15:27:52 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/link_Add Columns")): Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:27:53 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:27:53 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/drp_DataGroup")): Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:27:53 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:27:53 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("ReportSetupScreen/DataGroupValues/Guest Count/Tpl_GuestCount")): Object 'Object Repository/ReportSetupScreen/DataGroupValues/Guest Count/Tpl_GuestCount' is clickable

2020-03-17 15:27:54 - [MESSAGE][PASSED] - Object 'Object Repository/ReportSetupScreen/DataGroupValues/Guest Count/Tpl_GuestCount' is clickable

2020-03-17 15:27:54 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Guest Count/Tpl_GuestCount")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Guest Count/Tpl_GuestCount' is clicked on

2020-03-17 15:27:54 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Guest Count/Tpl_GuestCount' is clicked on

2020-03-17 15:27:54 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:27:55 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:27:55 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:27:55 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:27:55 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/button_Add Columns(s)")): Object: 'Object Repository/ReportSetupScreen/Create Columns/button_Add Columns(s)' is clicked on

2020-03-17 15:27:56 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/button_Add Columns(s)' is clicked on

2020-03-17 15:27:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Guest Count- Daily Data Grain' successfully

2020-03-17 15:27:56 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Average Ticket - Daily Data Grain"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Average Ticket - Daily Data Grain' successfully

2020-03-17 15:27:56 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Average Ticket - Daily Data Grain: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Average Ticket - Daily Data Grain

2020-03-17 15:27:56 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/link_Add Columns")): Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:27:57 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:27:57 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/drp_DataGroup")): Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:27:57 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:27:57 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("ReportSetupScreen/DataGroupValues/Average Check/Tpl_AvrgCheck")): Object 'Object Repository/ReportSetupScreen/DataGroupValues/Average Check/Tpl_AvrgCheck' is clickable

2020-03-17 15:27:58 - [MESSAGE][PASSED] - Object 'Object Repository/ReportSetupScreen/DataGroupValues/Average Check/Tpl_AvrgCheck' is clickable

2020-03-17 15:27:58 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Average Check/Tpl_AvrgCheck")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Average Check/Tpl_AvrgCheck' is clicked on

2020-03-17 15:27:58 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Average Check/Tpl_AvrgCheck' is clicked on

2020-03-17 15:27:58 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:27:59 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:27:59 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:27:59 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:27:59 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/button_Add Columns(s)")): Object: 'Object Repository/ReportSetupScreen/Create Columns/button_Add Columns(s)' is clicked on

2020-03-17 15:28:00 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/button_Add Columns(s)' is clicked on

2020-03-17 15:28:00 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Average Ticket - Daily Data Grain' successfully

2020-03-17 15:28:00 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Cost-Daily Data Grain"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Cost-Daily Data Grain' successfully

2020-03-17 15:28:00 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Cost-Daily Data Grain: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Cost-Daily Data Grain

2020-03-17 15:28:00 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/link_Add Columns")): Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:28:01 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:28:01 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/drp_DataGroup")): Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:28:01 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:28:01 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("ReportSetupScreen/DataGroupValues/Labor Cost/tpl_LaborCost")): Object 'Object Repository/ReportSetupScreen/DataGroupValues/Labor Cost/tpl_LaborCost' is clickable

2020-03-17 15:28:02 - [MESSAGE][PASSED] - Object 'Object Repository/ReportSetupScreen/DataGroupValues/Labor Cost/tpl_LaborCost' is clickable

2020-03-17 15:28:02 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Labor Cost/tpl_LaborCost")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Labor Cost/tpl_LaborCost' is clicked on

2020-03-17 15:28:02 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Labor Cost/tpl_LaborCost' is clicked on

2020-03-17 15:28:02 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:28:03 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:28:03 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:28:03 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:28:03 - [TEST_STEP][NOT_RUN] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_LastWeek")): NOT_RUN: click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_LastWeek"))

2020-03-17 15:28:03 - [MESSAGE][NOT_RUN] - NOT_RUN: click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_LastWeek"))

2020-03-17 15:28:03 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/button_Add Columns(s)")): Object: 'Object Repository/ReportSetupScreen/Create Columns/button_Add Columns(s)' is clicked on

2020-03-17 15:28:04 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/button_Add Columns(s)' is clicked on

2020-03-17 15:28:04 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Cost-Daily Data Grain' successfully

2020-03-17 15:28:04 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Gross Sales -Daily Data Grain"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Gross Sales -Daily Data Grain' successfully

2020-03-17 15:28:04 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Gross Sales -Daily Data Grain: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Gross Sales -Daily Data Grain

2020-03-17 15:28:04 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/link_Add Columns")): Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:28:05 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:28:05 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/drp_DataGroup")): Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:28:05 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:28:05 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("ReportSetupScreen/DataGroupValues/Gross Sales/Tpl_Gross Sales")): Object 'Object Repository/ReportSetupScreen/DataGroupValues/Gross Sales/Tpl_Gross Sales' is clickable

2020-03-17 15:28:06 - [MESSAGE][PASSED] - Object 'Object Repository/ReportSetupScreen/DataGroupValues/Gross Sales/Tpl_Gross Sales' is clickable

2020-03-17 15:28:06 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Gross Sales/Tpl_Gross Sales")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Gross Sales/Tpl_Gross Sales' is clicked on

2020-03-17 15:28:06 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Gross Sales/Tpl_Gross Sales' is clicked on

2020-03-17 15:28:06 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:28:07 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:28:07 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:28:08 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:28:08 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/button_Add Columns(s)")): Object: 'Object Repository/ReportSetupScreen/Create Columns/button_Add Columns(s)' is clicked on

2020-03-17 15:28:08 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/button_Add Columns(s)' is clicked on

2020-03-17 15:28:08 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Gross Sales -Daily Data Grain' successfully

2020-03-17 15:28:08 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Hours -Daily Data Grain"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Hours -Daily Data Grain' successfully

2020-03-17 15:28:08 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Hours -Daily Data Grain: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Hours -Daily Data Grain

2020-03-17 15:28:08 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/link_Add Columns")): Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:28:09 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/link_Add Columns' is clicked on

2020-03-17 15:28:09 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/drp_DataGroup")): Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:28:10 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/drp_DataGroup' is clicked on

2020-03-17 15:28:10 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("ReportSetupScreen/DataGroupValues/Labor Hours/Tpl_Labor Hours")): Object 'Object Repository/ReportSetupScreen/DataGroupValues/Labor Hours/Tpl_Labor Hours' is clickable

2020-03-17 15:28:10 - [MESSAGE][PASSED] - Object 'Object Repository/ReportSetupScreen/DataGroupValues/Labor Hours/Tpl_Labor Hours' is clickable

2020-03-17 15:28:10 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Labor Hours/Tpl_Labor Hours")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Labor Hours/Tpl_Labor Hours' is clicked on

2020-03-17 15:28:10 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Labor Hours/Tpl_Labor Hours' is clicked on

2020-03-17 15:28:10 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:28:11 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_Actual' is clicked on

2020-03-17 15:28:11 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear")): Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:28:12 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/DataGroupValues/Categories/Ctg_LastYear' is clicked on

2020-03-17 15:28:12 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Create Columns/button_Add Columns(s)")): Object: 'Object Repository/ReportSetupScreen/Create Columns/button_Add Columns(s)' is clicked on

2020-03-17 15:28:12 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Create Columns/button_Add Columns(s)' is clicked on

2020-03-17 15:28:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Column Selection By Data Grain/Daily Data Grain/Labor Hours -Daily Data Grain' successfully

2020-03-17 15:28:12 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Data Grain with Present Data By/Select Data Grain And Present Data By options for Report' successfully

2020-03-17 15:28:12 - [TEST_STEP][PASSED] - ColumnListNew = []: null

2020-03-17 15:28:12 - [TEST_STEP][PASSED] - ColumnListNew = reportbuildercustom.RB_Keywords.verifyTotalAddedColumns(): reportbuildercustom.RB_Keywords.verifyTotalAddedColumns is PASSED

2020-03-17 15:28:13 - [MESSAGE][PASSED] - reportbuildercustom.RB_Keywords.verifyTotalAddedColumns is PASSED

2020-03-17 15:28:13 - [TEST_STEP][PASSED] - TotalNoOfColumnsAdded = ColumnListNew.size(): null

2020-03-17 15:28:13 - [TEST_STEP][PASSED] - println(TotalNoOfColumnsAdded): null

2020-03-17 15:28:13 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Select Grouping By Hierarchy"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Select Grouping By Hierarchy' successfully

2020-03-17 15:28:14 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Select Grouping By Hierarchy: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Select Grouping By Hierarchy

2020-03-17 15:28:14 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Grouping/By Hierarchy/btn_ByHierarchy")): Object: 'Object Repository/ReportSetupScreen/Grouping/By Hierarchy/btn_ByHierarchy' is clicked on

2020-03-17 15:28:14 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Grouping/By Hierarchy/btn_ByHierarchy' is clicked on

2020-03-17 15:28:14 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Grouping/By Hierarchy/span_By Region")): Object: 'Object Repository/ReportSetupScreen/Grouping/By Hierarchy/span_By Region' is clicked on

2020-03-17 15:28:15 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Grouping/By Hierarchy/span_By Region' is clicked on

2020-03-17 15:28:15 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Grouping/By Hierarchy/span_Show Region Subtotal")): Object: 'Object Repository/ReportSetupScreen/Grouping/By Hierarchy/span_Show Region Subtotal' is clicked on

2020-03-17 15:28:15 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Grouping/By Hierarchy/span_Show Region Subtotal' is clicked on

2020-03-17 15:28:15 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Grouping/By Hierarchy/span_By District")): Object: 'Object Repository/ReportSetupScreen/Grouping/By Hierarchy/span_By District' is clicked on

2020-03-17 15:28:16 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Grouping/By Hierarchy/span_By District' is clicked on

2020-03-17 15:28:16 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/Grouping/By Hierarchy/span_Show District Subtotal")): Object: 'Object Repository/ReportSetupScreen/Grouping/By Hierarchy/span_Show District Subtotal' is clicked on

2020-03-17 15:28:16 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/Grouping/By Hierarchy/span_Show District Subtotal' is clicked on

2020-03-17 15:28:16 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Select Grouping By Hierarchy' successfully

2020-03-17 15:28:16 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Click on Create Report Button"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Click on Create Report Button' successfully

2020-03-17 15:28:16 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Click on Create Report Button: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Click on Create Report Button

2020-03-17 15:28:17 - [TEST_STEP][PASSED] - click(findTestObject("ReportSetupScreen/button_Create report")): Object: 'Object Repository/ReportSetupScreen/button_Create report' is clicked on

2020-03-17 15:28:17 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportSetupScreen/button_Create report' is clicked on

2020-03-17 15:28:17 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Click on Create Report Button' successfully

2020-03-17 15:28:17 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Search and validate created report from list of reports"), ["SearchCategory":CategoryName, "SearchReport":ReportName], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Search and validate created report from list of reports' successfully

2020-03-17 15:28:17 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Search and validate created report from list of reports: Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Search and validate created report from list of reports

2020-03-17 15:28:18 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Page_Restaurant Intranet/Setup/tasterMessage"), 5): Object 'Object Repository/Page_Restaurant Intranet/Setup/tasterMessage' is visible

2020-03-17 15:28:18 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Setup/tasterMessage' is visible

2020-03-17 15:28:18 - [TEST_STEP][PASSED] - waitForElementNotVisible(findTestObject("Page_Restaurant Intranet/Setup/tasterMessage"), 5): Object 'Object Repository/Page_Restaurant Intranet/Setup/tasterMessage' is NOT visible

2020-03-17 15:28:23 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Setup/tasterMessage' is NOT visible

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - refresh(): NOT_RUN: refresh()

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: refresh()

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - waitForElementClickable(findTestObject("ReportSetupScreen/input_SearchReportFilter"), 20): NOT_RUN: waitForElementClickable(findTestObject("ReportSetupScreen/input_SearchReportFilter"), 20)

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: waitForElementClickable(findTestObject("ReportSetupScreen/input_SearchReportFilter"), 20)

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - click(findTestObject("ReportSetupScreen/input_SearchReportFilter")): NOT_RUN: click(findTestObject("ReportSetupScreen/input_SearchReportFilter"))

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: click(findTestObject("ReportSetupScreen/input_SearchReportFilter"))

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - reportName = SearchReport: NOT_RUN: reportName = SearchReport

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: reportName = SearchReport

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - setText(findTestObject("ReportSetupScreen/input_SearchReportFilter"), reportName): NOT_RUN: setText(findTestObject("ReportSetupScreen/input_SearchReportFilter"), reportName)

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: setText(findTestObject("ReportSetupScreen/input_SearchReportFilter"), reportName)

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - click(findTestObject("ReportSetupScreen/Reports_header")): NOT_RUN: click(findTestObject("ReportSetupScreen/Reports_header"))

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: click(findTestObject("ReportSetupScreen/Reports_header"))

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - delay(2): NOT_RUN: delay(2)

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: delay(2)

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - click(findTestObject("ReportSetupScreen/tabel_SearchedReport")): NOT_RUN: click(findTestObject("ReportSetupScreen/tabel_SearchedReport"))

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: click(findTestObject("ReportSetupScreen/tabel_SearchedReport"))

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - strReportName = getText(findTestObject("ReportSetupScreen/tabel_SearchedReport")): NOT_RUN: strReportName = getText(findTestObject("ReportSetupScreen/tabel_SearchedReport"))

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: strReportName = getText(findTestObject("ReportSetupScreen/tabel_SearchedReport"))

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - if (strReportName.equalsIgnoreCase(reportName)): NOT_RUN: if (strReportName.equalsIgnoreCase(reportName))

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: if (strReportName.equalsIgnoreCase(reportName))

2020-03-17 15:28:23 - [TEST_STEP][NOT_RUN] - waitForElementClickable(findTestObject("Page_Restaurant Intranet/link_ProfileIcon"), 0): NOT_RUN: waitForElementClickable(findTestObject("Page_Restaurant Intranet/link_ProfileIcon"), 0)

2020-03-17 15:28:23 - [MESSAGE][NOT_RUN] - NOT_RUN: waitForElementClickable(findTestObject("Page_Restaurant Intranet/link_ProfileIcon"), 0)

2020-03-17 15:28:23 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2020-03-17 15:28:26 - [MESSAGE][PASSED] - Delayed 3 second(s)

2020-03-17 15:28:26 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CrossLocationReportBuilderSetup_Page/Search and validate created report from list of reports' successfully

2020-03-17 15:28:26 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Click on Dashboard Link"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Click on Dashboard Link' successfully

2020-03-17 15:28:27 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Click on Dashboard Link: Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Click on Dashboard Link

2020-03-17 15:28:27 - [TEST_STEP][PASSED] - mouseOver(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_CrossLocationReportIcon")): Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_CrossLocationReportIcon' is hovered

2020-03-17 15:28:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_CrossLocationReportIcon' is hovered

2020-03-17 15:28:27 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2020-03-17 15:28:29 - [MESSAGE][PASSED] - Delayed 2 second(s)

2020-03-17 15:28:29 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_Calendar"), ExplicitWait): Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_Calendar' is clickable

2020-03-17 15:28:30 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_Calendar' is clickable

2020-03-17 15:28:30 - [TEST_STEP][NOT_RUN] - verifyElementPresent(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_Calendar"), 0): NOT_RUN: verifyElementPresent(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_Calendar"), 0)

2020-03-17 15:28:30 - [MESSAGE][NOT_RUN] - NOT_RUN: verifyElementPresent(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_Calendar"), 0)

2020-03-17 15:28:30 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_Calendar")): Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_Calendar' is clicked on

2020-03-17 15:28:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_Calendar' is clicked on

2020-03-17 15:28:30 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Click on Dashboard Link' successfully

2020-03-17 15:28:30 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Select PC name"), ["PCName":PCName], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Select PC name' successfully

2020-03-17 15:28:30 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Select PC name: Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Select PC name

2020-03-17 15:28:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/drp_PC_Name")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/drp_PC_Name' is clicked on

2020-03-17 15:28:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/drp_PC_Name' is clicked on

2020-03-17 15:28:37 - [TEST_STEP][PASSED] - setText(findTestObject("Page_Restaurant Intranet/Dashboard/drp_PC_Name"), PCName): Text 'Union Ave' is set on object 'Object Repository/Page_Restaurant Intranet/Dashboard/drp_PC_Name'

2020-03-17 15:28:38 - [MESSAGE][PASSED] - Text 'Union Ave' is set on object 'Object Repository/Page_Restaurant Intranet/Dashboard/drp_PC_Name'

2020-03-17 15:28:38 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Page_Restaurant Intranet/Dashboard/drp_PC_Name"), Keys.chord(ENTER)): Keys 'ENTER + ' sent to object: 'Object Repository/Page_Restaurant Intranet/Dashboard/drp_PC_Name'

2020-03-17 15:28:39 - [MESSAGE][PASSED] - Keys 'ENTER + ' sent to object: 'Object Repository/Page_Restaurant Intranet/Dashboard/drp_PC_Name'

2020-03-17 15:28:39 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Select PC name' successfully

2020-03-17 15:28:39 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Click on dashbord calender button and select operational calender"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Click on dashbord calender button and select operational calender' successfully

2020-03-17 15:28:39 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Click on dashbord calender button and select operational calender: Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Click on dashbord calender button and select operational calender

2020-03-17 15:28:39 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/btn_DashboardCalender")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_DashboardCalender' is clicked on

2020-03-17 15:28:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_DashboardCalender' is clicked on

2020-03-17 15:28:47 - [TEST_STEP][PASSED] - OC1 = OperationalCalender: null

2020-03-17 15:28:47 - [TEST_STEP][PASSED] - OY1 = SalesBudgetYear: null

2020-03-17 15:28:47 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2020-03-17 15:28:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/drp_YearPeriod")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/drp_YearPeriod' is clicked on

2020-03-17 15:28:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/drp_YearPeriod' is clicked on

2020-03-17 15:28:47 - [TEST_STEP][PASSED] - yearfiled = driver.findElement(By.xpath("//option[contains(text(),"" + OY1 + "")]")): null

2020-03-17 15:28:47 - [TEST_STEP][PASSED] - yearfiled.click(): null

2020-03-17 15:28:47 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/drp_calender")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/drp_calender' is clicked on

2020-03-17 15:28:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/drp_calender' is clicked on

2020-03-17 15:28:54 - [TEST_STEP][PASSED] - fields = driver.findElement(By.xpath("//option[contains(text(),"" + OC1 + "")]")): null

2020-03-17 15:28:54 - [TEST_STEP][PASSED] - fields.click(): null

2020-03-17 15:28:55 - [TEST_STEP][PASSED] - if (xpath("//div[@class='popover__cross']")).isDisplayed()): null

2020-03-17 15:29:02 - [TEST_STEP][PASSED] - markPassed("Clicking on Dates of dashbord calender"): Clicking on Dates of dashbord calender

2020-03-17 15:29:02 - [MESSAGE][PASSED] - Clicking on Dates of dashbord calender

2020-03-17 15:29:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Click on dashbord calender button and select operational calender' successfully

2020-03-17 15:29:02 - [TEST_STEP][PASSED] - valuesFromCalendarDashboard = [:]: null

2020-03-17 15:29:02 - [TEST_STEP][PASSED] - valuesFromCalendarDashboard = callTestCase(findTestCase("ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Get all available variable values from calender view for one month"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Get all available variable values from calender view for one month' successfully

2020-03-17 15:29:02 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Get all available variable values from calender view for one month: Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Get all available variable values from calender view for one month

2020-03-17 15:29:02 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2020-03-17 15:29:04 - [MESSAGE][PASSED] - Delayed 2 second(s)

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - NetSales = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - NetSalesLastYear = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - BudgetedSales = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - GuestCount = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - GuestCountLastYear = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - GuestCountBudget = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - AvgCheck = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - AvgCheckLastYear = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - AvgCheckBudget = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - Labor = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - LaborLastYear = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - LaborBudget = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - AllVariables = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - DateAndValueFromCal = [:]: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - DayWiseDate = []: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - CalendarDates = []: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - DailyDate = null: null

2020-03-17 15:29:04 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2020-03-17 15:29:07 - [MESSAGE][PASSED] - Delayed 3 second(s)

2020-03-17 15:29:07 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2020-03-17 15:29:07 - [TEST_STEP][PASSED] - Wrappers = driver.findElement(By.xpath("//div[@class='calendar-wrap dbschema_wraper']")): null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - Calenderrow = Wrappers.findElements(By.xpath("((//div[@class="col-center col-center--chart"]))//div[@class="chart-data chart-data--future"]")): null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - NoOfcalenderRows = Calenderrow.size(): null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - println("No of calender rows are" + NoOfcalenderRows): null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - for ([l = 0, l < 3, (l++)]): EXECUTION OF GETTING DATA FROM CALENDAR DASHBOARD FOR DATE  + OCTOBER 29+ is completed successfully....

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - Row = get(l).findElements(By.xpath("//div[@class='chart-data chart-data--future']")): null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - NoOfRows = Row.size(): null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - println("No of  rows " + NoOfRows): null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - CalenderView = Row.get(l): null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - if (l > 13): null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - else: null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - CalenderView.click(): null

2020-03-17 15:29:08 - [TEST_STEP][PASSED] - DateOnCalendar = getText(findTestObject("Page_Restaurant Intranet/Dashboard/div_DailyDateHeader")): Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/div_DailyDateHeader' is: 'SUNDAY, OCTOBER 27'

2020-03-17 15:29:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/div_DailyDateHeader' is: 'SUNDAY, OCTOBER 27'

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - CalendarDates = DateOnCalendar.split(","): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - DailyDates = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - DayWiseDate.add(l, DailyDates): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - FirstCharacter = DailyDates.charAt(0): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - if (DailyDates.length() == 1): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - else: null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - DailyDate = DailyDates: null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - HeaderOftabel = ["Total"]: null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - HeaderRow = driver.findElement(By.xpath("//*[@id="mdl-dailyActuals"]/div/div/div[2]/div/div[1]/div/div/table/thead")): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - Headers = HeaderRow.findElements(By.tagName("th")): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - println(Headers.size()): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - for ([i = 1, i < Headers.size() - 1, (i++)]): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - HeaderName = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - println(HeaderName): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - if (HeaderOftabel.contains(HeaderName)): null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - index = i: null

2020-03-17 15:29:09 - [TEST_STEP][PASSED] - Tabel = driver.findElement(By.xpath("//*[@id="mdl-dailyActuals"]/div/div/div[2]/div/div[1]/div/div/table/tbody")): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - Rows = Tabel.findElements(By.tagName("tr")): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - for ([j = 0, j < Rows.size(), (j++)]): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - logInfo("FETCHING NET SALES TY VALUE FROM CALENDAR FOR DATE:" + DailyDate): FETCHING NET SALES TY VALUE FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:10 - [MESSAGE][INFO] - FETCHING NET SALES TY VALUE FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - NetSalesTY = get(index).getText(): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - comment(NetSalesTY): $3,328.83

2020-03-17 15:29:10 - [MESSAGE][INFO] - $3,328.83

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - println(NetSalesTY): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - NetSales.put(DailyDate, NetSalesTY): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - AllVariables.put("NetSalesValues", NetSales): null

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - logInfo("FETCHING NET SALES LY VALUE FROM CALENDAR FOR DATE:" + DailyDate): FETCHING NET SALES LY VALUE FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:10 - [MESSAGE][INFO] - FETCHING NET SALES LY VALUE FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:10 - [TEST_STEP][PASSED] - NetSalesLYData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - NetSalesLY = get(0).getText(): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - comment(NetSalesLY): $0.00

2020-03-17 15:29:11 - [MESSAGE][INFO] - $0.00

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - println(NetSalesLY): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - NetSalesLastYear.put(DailyDate, NetSalesLY): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - AllVariables.put("NetSalesLastYearValues", NetSalesLastYear): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - else if (Variablename.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - logInfo("FETCHING GUEST COUNT TY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING GUEST COUNT TY FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:11 - [MESSAGE][INFO] - FETCHING GUEST COUNT TY FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - GuestCountTY = get(index).getText(): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - comment(GuestCountTY): 627

2020-03-17 15:29:11 - [MESSAGE][INFO] - 627

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - println(GuestCountTY): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - GuestCount.put(DailyDate, GuestCountTY): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - AllVariables.put("GuestCountValues", GuestCount): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - logInfo("FETCHING GUEST COUNT LY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING GUEST COUNT LY FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:11 - [MESSAGE][INFO] - FETCHING GUEST COUNT LY FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - GuestCountLYData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - GuestCountLY = get(0).getText(): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - comment(GuestCountLY): 0

2020-03-17 15:29:11 - [MESSAGE][INFO] - 0

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - println(GuestCountLY): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - GuestCountLastYear.put(DailyDate, GuestCountLY): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - AllVariables.put("GuestCountLastYearValues", GuestCountLastYear): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:11 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - else if (Variablename.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - else if (Variablename.equalsIgnoreCase("PPA") || Variablename.equalsIgnoreCase("AVG.CHECK")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - logInfo("FETCHING AVG CHECK TY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING AVG CHECK TY FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:12 - [MESSAGE][INFO] - FETCHING AVG CHECK TY FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - AvgCheckTY = get(index).getText(): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - comment(AvgCheckTY): $5.31

2020-03-17 15:29:12 - [MESSAGE][INFO] - $5.31

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - println(AvgCheckTY): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - AvgCheck.put(DailyDate, AvgCheckTY): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - AllVariables.put("AvgCheckValues", AvgCheck): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - logInfo("FETCHING AVG CHECK LY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING AVG CHECK LY FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:12 - [MESSAGE][INFO] - FETCHING AVG CHECK LY FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - AvgCheckLYData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - AvgCheckLY = get(0).getText(): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - comment(AvgCheckLY): $0.00

2020-03-17 15:29:12 - [MESSAGE][INFO] - $0.00

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - println(AvgCheckLY): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - AvgCheckLastYear.put(DailyDate, AvgCheckLY): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - AllVariables.put("AvgCheckLastYearValues", AvgCheckLastYear): null

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - currentComparisionWith = getText(findTestObject("Page_Restaurant Intranet/Dashboard/span_Last Year")): Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/span_Last Year' is: 'Last Year'

2020-03-17 15:29:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/span_Last Year' is: 'Last Year'

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - if (currentComparisionWith.equalsIgnoreCase("Last Year")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - logInfo("NOW FETCHING VARIABLE DATA FOR BUDGET FOR SAME PERIOD"): NOW FETCHING VARIABLE DATA FOR BUDGET FOR SAME PERIOD

2020-03-17 15:29:12 - [MESSAGE][INFO] - NOW FETCHING VARIABLE DATA FOR BUDGET FOR SAME PERIOD

2020-03-17 15:29:12 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/btn_toChangeBudget")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:13 - [TEST_STEP][PASSED] - Tabe2 = driver.findElement(By.xpath("//*[@id="mdl-dailyActuals"]/div/div/div[2]/div/div[1]/div/div/table/tbody")): null

2020-03-17 15:29:13 - [TEST_STEP][PASSED] - Rows2 = Tabe2.findElements(By.tagName("tr")): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - for ([k = 0, k < Rows2.size(), (k++)]): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - logInfo("FETCHING NET SALES BUDGET FROM CALENDAR FOR DATE:" + DailyDate): FETCHING NET SALES BUDGET FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:14 - [MESSAGE][INFO] - FETCHING NET SALES BUDGET FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - NetSalesBudgetedData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - NetSalesBudgeted = get(0).getText(): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - comment(NetSalesBudgeted): $1,866.06

2020-03-17 15:29:14 - [MESSAGE][INFO] - $1,866.06

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - println(NetSalesBudgeted): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - BudgetedSales.put(DailyDate, NetSalesBudgeted): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - AllVariables.put("BudgetedSalesValues", BudgetedSales): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - else if (VariablenameBudget.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - logInfo("FETCHING GUEST COUNT BUDGET FROM CALENDAR FOR DATE:" + DailyDate): FETCHING GUEST COUNT BUDGET FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:14 - [MESSAGE][INFO] - FETCHING GUEST COUNT BUDGET FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:14 - [TEST_STEP][PASSED] - GuestCountBudgetedData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - GuestCountBudgeted = get(0).getText(): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - comment(GuestCountBudgeted): 159

2020-03-17 15:29:15 - [MESSAGE][INFO] - 159

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - println(GuestCountBudgeted): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - GuestCountBudget.put(DailyDate, GuestCountBudgeted): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - AllVariables.put("GuestCountBudgetValues", GuestCountBudget): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - else if (VariablenameBudget.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - else if (VariablenameBudget.equalsIgnoreCase("PPA") || VariablenameBudget.equalsIgnoreCase("AVG.CHECK")): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - logInfo("FETCHING AVG CHECK BUDGET FROM CALENDAR FOR DATE:" + DailyDate): FETCHING AVG CHECK BUDGET FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:15 - [MESSAGE][INFO] - FETCHING AVG CHECK BUDGET FROM CALENDAR FOR DATE: OCTOBER 27

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - AvgCheckBudgetedData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - AvegCheckBudgeted = get(0).getText(): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - comment(AvegCheckBudgeted): $11.74

2020-03-17 15:29:15 - [MESSAGE][INFO] - $11.74

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - println(AvegCheckBudgeted): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - AvgCheckBudget.put(DailyDate, AvegCheckBudgeted): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - AllVariables.put("AvgCheckBudgetValues", AvgCheckBudget): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:15 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:16 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:16 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:16 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/btn_toChangeBudget")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:16 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:16 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:17 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:17 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:17 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("Page_Restaurant Intranet/Dashboard/btn_closePopUp"), 10): Object 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clickable

2020-03-17 15:29:17 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clickable

2020-03-17 15:29:17 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/btn_closePopUp"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clicked on

2020-03-17 15:29:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clicked on

2020-03-17 15:29:17 - [TEST_STEP][PASSED] - markPassed("EXECUTION OF GETTING DATA FROM CALENDAR DASHBOARD FOR DATE  +" + DailyDate + "+ is completed successfully...."): EXECUTION OF GETTING DATA FROM CALENDAR DASHBOARD FOR DATE  + OCTOBER 27+ is completed successfully....

2020-03-17 15:29:17 - [MESSAGE][PASSED] - EXECUTION OF GETTING DATA FROM CALENDAR DASHBOARD FOR DATE  + OCTOBER 27+ is completed successfully....

2020-03-17 15:29:17 - [TEST_STEP][PASSED] - Row = get(l).findElements(By.xpath("//div[@class='chart-data chart-data--future']")): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - NoOfRows = Row.size(): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - println("No of  rows " + NoOfRows): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - CalenderView = Row.get(l): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - if (l > 13): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - else: null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - CalenderView.click(): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - DateOnCalendar = getText(findTestObject("Page_Restaurant Intranet/Dashboard/div_DailyDateHeader")): Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/div_DailyDateHeader' is: 'MONDAY, OCTOBER 28'

2020-03-17 15:29:18 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/div_DailyDateHeader' is: 'MONDAY, OCTOBER 28'

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - CalendarDates = DateOnCalendar.split(","): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - DailyDates = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - DayWiseDate.add(l, DailyDates): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - FirstCharacter = DailyDates.charAt(0): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - if (DailyDates.length() == 1): null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - else: null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - DailyDate = DailyDates: null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - HeaderOftabel = ["Total"]: null

2020-03-17 15:29:18 - [TEST_STEP][PASSED] - HeaderRow = driver.findElement(By.xpath("//*[@id="mdl-dailyActuals"]/div/div/div[2]/div/div[1]/div/div/table/thead")): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - Headers = HeaderRow.findElements(By.tagName("th")): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - println(Headers.size()): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - for ([i = 1, i < Headers.size() - 1, (i++)]): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - HeaderName = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - println(HeaderName): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - if (HeaderOftabel.contains(HeaderName)): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - index = i: null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - Tabel = driver.findElement(By.xpath("//*[@id="mdl-dailyActuals"]/div/div/div[2]/div/div[1]/div/div/table/tbody")): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - Rows = Tabel.findElements(By.tagName("tr")): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - for ([j = 0, j < Rows.size(), (j++)]): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:19 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - logInfo("FETCHING NET SALES TY VALUE FROM CALENDAR FOR DATE:" + DailyDate): FETCHING NET SALES TY VALUE FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:20 - [MESSAGE][INFO] - FETCHING NET SALES TY VALUE FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - NetSalesTY = get(index).getText(): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - comment(NetSalesTY): $2,668.90

2020-03-17 15:29:20 - [MESSAGE][INFO] - $2,668.90

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - println(NetSalesTY): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - NetSales.put(DailyDate, NetSalesTY): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - AllVariables.put("NetSalesValues", NetSales): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - logInfo("FETCHING NET SALES LY VALUE FROM CALENDAR FOR DATE:" + DailyDate): FETCHING NET SALES LY VALUE FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:20 - [MESSAGE][INFO] - FETCHING NET SALES LY VALUE FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - NetSalesLYData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - NetSalesLY = get(0).getText(): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - comment(NetSalesLY): $0.00

2020-03-17 15:29:20 - [MESSAGE][INFO] - $0.00

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - println(NetSalesLY): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - NetSalesLastYear.put(DailyDate, NetSalesLY): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - AllVariables.put("NetSalesLastYearValues", NetSalesLastYear): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - else if (Variablename.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - logInfo("FETCHING GUEST COUNT TY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING GUEST COUNT TY FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:20 - [MESSAGE][INFO] - FETCHING GUEST COUNT TY FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - GuestCountTY = get(index).getText(): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - comment(GuestCountTY): 628

2020-03-17 15:29:20 - [MESSAGE][INFO] - 628

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - println(GuestCountTY): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - GuestCount.put(DailyDate, GuestCountTY): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - AllVariables.put("GuestCountValues", GuestCount): null

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - logInfo("FETCHING GUEST COUNT LY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING GUEST COUNT LY FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:20 - [MESSAGE][INFO] - FETCHING GUEST COUNT LY FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:20 - [TEST_STEP][PASSED] - GuestCountLYData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - GuestCountLY = get(0).getText(): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - comment(GuestCountLY): 0

2020-03-17 15:29:21 - [MESSAGE][INFO] - 0

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - println(GuestCountLY): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - GuestCountLastYear.put(DailyDate, GuestCountLY): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - AllVariables.put("GuestCountLastYearValues", GuestCountLastYear): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - else if (Variablename.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - else if (Variablename.equalsIgnoreCase("PPA") || Variablename.equalsIgnoreCase("AVG.CHECK")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - logInfo("FETCHING AVG CHECK TY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING AVG CHECK TY FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:21 - [MESSAGE][INFO] - FETCHING AVG CHECK TY FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - AvgCheckTY = get(index).getText(): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - comment(AvgCheckTY): $4.25

2020-03-17 15:29:21 - [MESSAGE][INFO] - $4.25

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - println(AvgCheckTY): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - AvgCheck.put(DailyDate, AvgCheckTY): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - AllVariables.put("AvgCheckValues", AvgCheck): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - logInfo("FETCHING AVG CHECK LY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING AVG CHECK LY FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:21 - [MESSAGE][INFO] - FETCHING AVG CHECK LY FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - AvgCheckLYData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - AvgCheckLY = get(0).getText(): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - comment(AvgCheckLY): $0.00

2020-03-17 15:29:21 - [MESSAGE][INFO] - $0.00

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - println(AvgCheckLY): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - AvgCheckLastYear.put(DailyDate, AvgCheckLY): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - AllVariables.put("AvgCheckLastYearValues", AvgCheckLastYear): null

2020-03-17 15:29:21 - [TEST_STEP][PASSED] - currentComparisionWith = getText(findTestObject("Page_Restaurant Intranet/Dashboard/span_Last Year")): Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/span_Last Year' is: 'Last Year'

2020-03-17 15:29:22 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/span_Last Year' is: 'Last Year'

2020-03-17 15:29:22 - [TEST_STEP][PASSED] - if (currentComparisionWith.equalsIgnoreCase("Last Year")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:22 - [TEST_STEP][PASSED] - logInfo("NOW FETCHING VARIABLE DATA FOR BUDGET FOR SAME PERIOD"): NOW FETCHING VARIABLE DATA FOR BUDGET FOR SAME PERIOD

2020-03-17 15:29:22 - [MESSAGE][INFO] - NOW FETCHING VARIABLE DATA FOR BUDGET FOR SAME PERIOD

2020-03-17 15:29:22 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/btn_toChangeBudget")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:22 - [TEST_STEP][PASSED] - Tabe2 = driver.findElement(By.xpath("//*[@id="mdl-dailyActuals"]/div/div/div[2]/div/div[1]/div/div/table/tbody")): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - Rows2 = Tabe2.findElements(By.tagName("tr")): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - for ([k = 0, k < Rows2.size(), (k++)]): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - logInfo("FETCHING NET SALES BUDGET FROM CALENDAR FOR DATE:" + DailyDate): FETCHING NET SALES BUDGET FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:23 - [MESSAGE][INFO] - FETCHING NET SALES BUDGET FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - NetSalesBudgetedData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - NetSalesBudgeted = get(0).getText(): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - comment(NetSalesBudgeted): $1,866.06

2020-03-17 15:29:23 - [MESSAGE][INFO] - $1,866.06

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - println(NetSalesBudgeted): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - BudgetedSales.put(DailyDate, NetSalesBudgeted): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - AllVariables.put("BudgetedSalesValues", BudgetedSales): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:23 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - else if (VariablenameBudget.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - logInfo("FETCHING GUEST COUNT BUDGET FROM CALENDAR FOR DATE:" + DailyDate): FETCHING GUEST COUNT BUDGET FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:24 - [MESSAGE][INFO] - FETCHING GUEST COUNT BUDGET FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - GuestCountBudgetedData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - GuestCountBudgeted = get(0).getText(): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - comment(GuestCountBudgeted): 159

2020-03-17 15:29:24 - [MESSAGE][INFO] - 159

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - println(GuestCountBudgeted): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - GuestCountBudget.put(DailyDate, GuestCountBudgeted): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - AllVariables.put("GuestCountBudgetValues", GuestCountBudget): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - else if (VariablenameBudget.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - else if (VariablenameBudget.equalsIgnoreCase("PPA") || VariablenameBudget.equalsIgnoreCase("AVG.CHECK")): null

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - logInfo("FETCHING AVG CHECK BUDGET FROM CALENDAR FOR DATE:" + DailyDate): FETCHING AVG CHECK BUDGET FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:24 - [MESSAGE][INFO] - FETCHING AVG CHECK BUDGET FROM CALENDAR FOR DATE: OCTOBER 28

2020-03-17 15:29:24 - [TEST_STEP][PASSED] - AvgCheckBudgetedData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - AvegCheckBudgeted = get(0).getText(): null

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - comment(AvegCheckBudgeted): $11.74

2020-03-17 15:29:25 - [MESSAGE][INFO] - $11.74

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - println(AvegCheckBudgeted): null

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - AvgCheckBudget.put(DailyDate, AvegCheckBudgeted): null

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - AllVariables.put("AvgCheckBudgetValues", AvgCheckBudget): null

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/btn_toChangeBudget")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:25 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:26 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:26 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:26 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("Page_Restaurant Intranet/Dashboard/btn_closePopUp"), 10): Object 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clickable

2020-03-17 15:29:26 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clickable

2020-03-17 15:29:26 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/btn_closePopUp"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clicked on

2020-03-17 15:29:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clicked on

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - markPassed("EXECUTION OF GETTING DATA FROM CALENDAR DASHBOARD FOR DATE  +" + DailyDate + "+ is completed successfully...."): EXECUTION OF GETTING DATA FROM CALENDAR DASHBOARD FOR DATE  + OCTOBER 28+ is completed successfully....

2020-03-17 15:29:27 - [MESSAGE][PASSED] - EXECUTION OF GETTING DATA FROM CALENDAR DASHBOARD FOR DATE  + OCTOBER 28+ is completed successfully....

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - Row = get(l).findElements(By.xpath("//div[@class='chart-data chart-data--future']")): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - NoOfRows = Row.size(): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - println("No of  rows " + NoOfRows): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - CalenderView = Row.get(l): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - if (l > 13): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - else: null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - CalenderView.click(): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - DateOnCalendar = getText(findTestObject("Page_Restaurant Intranet/Dashboard/div_DailyDateHeader")): Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/div_DailyDateHeader' is: 'TUESDAY, OCTOBER 29'

2020-03-17 15:29:27 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/div_DailyDateHeader' is: 'TUESDAY, OCTOBER 29'

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - CalendarDates = DateOnCalendar.split(","): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - DailyDates = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - DayWiseDate.add(l, DailyDates): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - FirstCharacter = DailyDates.charAt(0): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - if (DailyDates.length() == 1): null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - else: null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - DailyDate = DailyDates: null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - HeaderOftabel = ["Total"]: null

2020-03-17 15:29:27 - [TEST_STEP][PASSED] - HeaderRow = driver.findElement(By.xpath("//*[@id="mdl-dailyActuals"]/div/div/div[2]/div/div[1]/div/div/table/thead")): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - Headers = HeaderRow.findElements(By.tagName("th")): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - println(Headers.size()): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - for ([i = 1, i < Headers.size() - 1, (i++)]): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - HeaderName = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - println(HeaderName): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - if (HeaderOftabel.contains(HeaderName)): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - index = i: null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - Tabel = driver.findElement(By.xpath("//*[@id="mdl-dailyActuals"]/div/div/div[2]/div/div[1]/div/div/table/tbody")): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - Rows = Tabel.findElements(By.tagName("tr")): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - for ([j = 0, j < Rows.size(), (j++)]): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:28 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - logInfo("FETCHING NET SALES TY VALUE FROM CALENDAR FOR DATE:" + DailyDate): FETCHING NET SALES TY VALUE FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:29 - [MESSAGE][INFO] - FETCHING NET SALES TY VALUE FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - NetSalesTY = get(index).getText(): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - comment(NetSalesTY): $2,966.19

2020-03-17 15:29:29 - [MESSAGE][INFO] - $2,966.19

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - println(NetSalesTY): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - NetSales.put(DailyDate, NetSalesTY): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - AllVariables.put("NetSalesValues", NetSales): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - logInfo("FETCHING NET SALES LY VALUE FROM CALENDAR FOR DATE:" + DailyDate): FETCHING NET SALES LY VALUE FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:29 - [MESSAGE][INFO] - FETCHING NET SALES LY VALUE FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - NetSalesLYData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - NetSalesLY = get(0).getText(): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - comment(NetSalesLY): $0.00

2020-03-17 15:29:29 - [MESSAGE][INFO] - $0.00

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - println(NetSalesLY): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - NetSalesLastYear.put(DailyDate, NetSalesLY): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - AllVariables.put("NetSalesLastYearValues", NetSalesLastYear): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - else if (Variablename.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - logInfo("FETCHING GUEST COUNT TY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING GUEST COUNT TY FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:29 - [MESSAGE][INFO] - FETCHING GUEST COUNT TY FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - GuestCountTY = get(index).getText(): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - comment(GuestCountTY): 687

2020-03-17 15:29:29 - [MESSAGE][INFO] - 687

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - println(GuestCountTY): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - GuestCount.put(DailyDate, GuestCountTY): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - AllVariables.put("GuestCountValues", GuestCount): null

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - logInfo("FETCHING GUEST COUNT LY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING GUEST COUNT LY FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:29 - [MESSAGE][INFO] - FETCHING GUEST COUNT LY FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:29 - [TEST_STEP][PASSED] - GuestCountLYData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - GuestCountLY = get(0).getText(): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - comment(GuestCountLY): 0

2020-03-17 15:29:30 - [MESSAGE][INFO] - 0

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - println(GuestCountLY): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - GuestCountLastYear.put(DailyDate, GuestCountLY): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - AllVariables.put("GuestCountLastYearValues", GuestCountLastYear): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - else if (Variablename.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - else if (Variablename.equalsIgnoreCase("PPA") || Variablename.equalsIgnoreCase("AVG.CHECK")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - logInfo("FETCHING AVG CHECK TY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING AVG CHECK TY FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:30 - [MESSAGE][INFO] - FETCHING AVG CHECK TY FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - AvgCheckTY = get(index).getText(): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - comment(AvgCheckTY): $4.32

2020-03-17 15:29:30 - [MESSAGE][INFO] - $4.32

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - println(AvgCheckTY): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - AvgCheck.put(DailyDate, AvgCheckTY): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - AllVariables.put("AvgCheckValues", AvgCheck): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - logInfo("FETCHING AVG CHECK LY FROM CALENDAR FOR DATE:" + DailyDate): FETCHING AVG CHECK LY FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:30 - [MESSAGE][INFO] - FETCHING AVG CHECK LY FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - AvgCheckLYData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - AvgCheckLY = get(0).getText(): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - comment(AvgCheckLY): $0.00

2020-03-17 15:29:30 - [MESSAGE][INFO] - $0.00

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - println(AvgCheckLY): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - AvgCheckLastYear.put(DailyDate, AvgCheckLY): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - AllVariables.put("AvgCheckLastYearValues", AvgCheckLastYear): null

2020-03-17 15:29:30 - [TEST_STEP][PASSED] - currentComparisionWith = getText(findTestObject("Page_Restaurant Intranet/Dashboard/span_Last Year")): Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/span_Last Year' is: 'Last Year'

2020-03-17 15:29:31 - [MESSAGE][PASSED] - Text of object 'Object Repository/Page_Restaurant Intranet/Dashboard/span_Last Year' is: 'Last Year'

2020-03-17 15:29:31 - [TEST_STEP][PASSED] - if (currentComparisionWith.equalsIgnoreCase("Last Year")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:31 - [TEST_STEP][PASSED] - logInfo("NOW FETCHING VARIABLE DATA FOR BUDGET FOR SAME PERIOD"): NOW FETCHING VARIABLE DATA FOR BUDGET FOR SAME PERIOD

2020-03-17 15:29:31 - [MESSAGE][INFO] - NOW FETCHING VARIABLE DATA FOR BUDGET FOR SAME PERIOD

2020-03-17 15:29:31 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/btn_toChangeBudget")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:31 - [TEST_STEP][PASSED] - Tabe2 = driver.findElement(By.xpath("//*[@id="mdl-dailyActuals"]/div/div/div[2]/div/div[1]/div/div/table/tbody")): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - Rows2 = Tabe2.findElements(By.tagName("tr")): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - for ([k = 0, k < Rows2.size(), (k++)]): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - logInfo("FETCHING NET SALES BUDGET FROM CALENDAR FOR DATE:" + DailyDate): FETCHING NET SALES BUDGET FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:32 - [MESSAGE][INFO] - FETCHING NET SALES BUDGET FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - NetSalesBudgetedData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - NetSalesBudgeted = get(0).getText(): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - comment(NetSalesBudgeted): $1,866.06

2020-03-17 15:29:32 - [MESSAGE][INFO] - $1,866.06

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - println(NetSalesBudgeted): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - BudgetedSales.put(DailyDate, NetSalesBudgeted): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - AllVariables.put("BudgetedSalesValues", BudgetedSales): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:32 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - else if (VariablenameBudget.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - logInfo("FETCHING GUEST COUNT BUDGET FROM CALENDAR FOR DATE:" + DailyDate): FETCHING GUEST COUNT BUDGET FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:33 - [MESSAGE][INFO] - FETCHING GUEST COUNT BUDGET FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - GuestCountBudgetedData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - GuestCountBudgeted = get(0).getText(): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - comment(GuestCountBudgeted): 159

2020-03-17 15:29:33 - [MESSAGE][INFO] - 159

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - println(GuestCountBudgeted): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - GuestCountBudget.put(DailyDate, GuestCountBudgeted): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - AllVariables.put("GuestCountBudgetValues", GuestCountBudget): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - else if (VariablenameBudget.equalsIgnoreCase("GUESTS")): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - else if (VariablenameBudget.equalsIgnoreCase("PPA") || VariablenameBudget.equalsIgnoreCase("AVG.CHECK")): null

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - logInfo("FETCHING AVG CHECK BUDGET FROM CALENDAR FOR DATE:" + DailyDate): FETCHING AVG CHECK BUDGET FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:33 - [MESSAGE][INFO] - FETCHING AVG CHECK BUDGET FROM CALENDAR FOR DATE: OCTOBER 29

2020-03-17 15:29:33 - [TEST_STEP][PASSED] - AvgCheckBudgetedData = get(index + 1).findElements(By.tagName("span")): null

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - AvegCheckBudgeted = get(0).getText(): null

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - comment(AvegCheckBudgeted): $11.74

2020-03-17 15:29:34 - [MESSAGE][INFO] - $11.74

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - println(AvegCheckBudgeted): null

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - AvgCheckBudget.put(DailyDate, AvegCheckBudgeted): null

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - AllVariables.put("AvgCheckBudgetValues", AvgCheckBudget): null

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - VariableRowBudget = Rows2.get(k): null

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - cellsBudget = VariableRowBudget.findElements(By.tagName("td")): null

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - VariablenameBudget = get(0).getText(): null

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - if (VariablenameBudget.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/btn_toChangeBudget")): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_toChangeBudget' is clicked on

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:29:34 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:29:35 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:29:35 - [TEST_STEP][PASSED] - if (Variablename.equalsIgnoreCase("SALES")): null

2020-03-17 15:29:35 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("Page_Restaurant Intranet/Dashboard/btn_closePopUp"), 10): Object 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clickable

2020-03-17 15:29:35 - [MESSAGE][PASSED] - Object 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clickable

2020-03-17 15:29:35 - [TEST_STEP][PASSED] - click(findTestObject("Page_Restaurant Intranet/Dashboard/btn_closePopUp"), CONTINUE_ON_FAILURE): Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clicked on

2020-03-17 15:29:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Dashboard/btn_closePopUp' is clicked on

2020-03-17 15:29:36 - [TEST_STEP][PASSED] - markPassed("EXECUTION OF GETTING DATA FROM CALENDAR DASHBOARD FOR DATE  +" + DailyDate + "+ is completed successfully...."): EXECUTION OF GETTING DATA FROM CALENDAR DASHBOARD FOR DATE  + OCTOBER 29+ is completed successfully....

2020-03-17 15:29:36 - [MESSAGE][PASSED] - EXECUTION OF GETTING DATA FROM CALENDAR DASHBOARD FOR DATE  + OCTOBER 29+ is completed successfully....

2020-03-17 15:29:36 - [TEST_STEP][PASSED] - println(AllVariables.size()): null

2020-03-17 15:29:36 - [TEST_STEP][PASSED] - valueFromCal = [:]: null

2020-03-17 15:29:36 - [TEST_STEP][PASSED] - valueFromCal = AllVariables.get("NetSalesValues"): null

2020-03-17 15:29:36 - [TEST_STEP][PASSED] - println(valueFromCal.size()): null

2020-03-17 15:29:36 - [TEST_STEP][PASSED] - DateAndValueFromCal.put("VariableValues", AllVariables): null

2020-03-17 15:29:36 - [TEST_STEP][PASSED] - DateAndValueFromCal.put("CalandarValues", DayWiseDate): null

2020-03-17 15:29:36 - [TEST_STEP][PASSED] - return DateAndValueFromCal: null

2020-03-17 15:29:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Get all available variable values from calender view for one month' successfully

2020-03-17 15:29:36 - [TEST_STEP][PASSED] - callTestCase(findTestCase("CrossLocationReportBuilder_TestCases/TC77_Verify Created Report is displaying same as per the set configuration in report setup"), ["ReportName":ReportName], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/CrossLocationReportBuilder_TestCases/TC77_Verify Created Report is displaying same as per the set configuration in report setup' successfully

2020-03-17 15:29:36 - [TEST_CASE][PASSED] - Test Cases/CrossLocationReportBuilder_TestCases/TC77_Verify Created Report is displaying same as per the set configuration in report setup: Test Cases/CrossLocationReportBuilder_TestCases/TC77_Verify Created Report is displaying same as per the set configuration in report setup

2020-03-17 15:29:36 - [TEST_STEP][PASSED] - refresh(): Refresh successfully

2020-03-17 15:29:47 - [MESSAGE][PASSED] - Refresh successfully

2020-03-17 15:29:47 - [TEST_STEP][PASSED] - mouseOver(findTestObject("Page_Restaurant Intranet/Left_Nav_Bar/link_CrossLocationReportIcon")): Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_CrossLocationReportIcon' is hovered

2020-03-17 15:29:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Page_Restaurant Intranet/Left_Nav_Bar/link_CrossLocationReportIcon' is hovered

2020-03-17 15:29:52 - [TEST_STEP][PASSED] - reportbuildercustom.RB_Keywords.clickOnReportCategory(CategoryName): reportbuildercustom.RB_Keywords.clickOnReportCategory is PASSED

2020-03-17 15:29:52 - [MESSAGE][PASSED] - Object 'CreatedColumns' is visible

2020-03-17 15:29:53 - [MESSAGE][PASSED] - Object 'CreatedColumns' is visible

2020-03-17 15:29:53 - [MESSAGE][PASSED] - Object: 'CreatedColumns' is clicked on

2020-03-17 15:29:53 - [MESSAGE][PASSED] - reportbuildercustom.RB_Keywords.clickOnReportCategory is PASSED

2020-03-17 15:29:53 - [TEST_STEP][PASSED] - reportbuildercustom.RB_Keywords.clickAndVerifyCreatedReport(ReportName): reportbuildercustom.RB_Keywords.clickAndVerifyCreatedReport is PASSED

2020-03-17 15:29:54 - [MESSAGE][PASSED] - Object 'CreatedColumns' is visible

2020-03-17 15:29:54 - [MESSAGE][PASSED] - Object 'CreatedColumns' is visible

2020-03-17 15:29:54 - [MESSAGE][PASSED] - Object: 'CreatedColumns' is clicked on

2020-03-17 15:29:54 - [MESSAGE][PASSED] - reportbuildercustom.RB_Keywords.clickAndVerifyCreatedReport is PASSED

2020-03-17 15:29:54 - [TEST_STEP][PASSED] - title = getText(findTestObject("Created Reports Objects/ReportTitle"), CONTINUE_ON_FAILURE): Text of object 'Object Repository/Created Reports Objects/ReportTitle' is: 'Daily Sales'

2020-03-17 15:29:57 - [MESSAGE][PASSED] - Text of object 'Object Repository/Created Reports Objects/ReportTitle' is: 'Daily Sales'

2020-03-17 15:29:57 - [TEST_STEP][PASSED] - if (title.equalsIgnoreCase(ReportName)): null

2020-03-17 15:29:57 - [TEST_STEP][PASSED] - assert true: null

2020-03-17 15:29:57 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/CrossLocationReportBuilder_TestCases/TC77_Verify Created Report is displaying same as per the set configuration in report setup' successfully

2020-03-17 15:29:57 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CreatedReports/Verify Date Picker is displayed as defined Data Grain - Copy"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Date Picker is displayed as defined Data Grain - Copy' successfully

2020-03-17 15:29:57 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CreatedReports/Verify Date Picker is displayed as defined Data Grain - Copy: Test Cases/ReportBuilder_Pages/CreatedReports/Verify Date Picker is displayed as defined Data Grain - Copy

2020-03-17 15:29:57 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Created Reports Objects/StartDate"), 0): Object 'Object Repository/Created Reports Objects/StartDate' is present

2020-03-17 15:29:57 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2020-03-17 15:29:58 - [MESSAGE][PASSED] - Object 'Object Repository/Created Reports Objects/StartDate' is present

2020-03-17 15:29:58 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Created Reports Objects/EndDate"), 0): Object 'Object Repository/Created Reports Objects/EndDate' is present

2020-03-17 15:29:58 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2020-03-17 15:29:58 - [MESSAGE][PASSED] - Object 'Object Repository/Created Reports Objects/EndDate' is present

2020-03-17 15:29:58 - [TEST_STEP][PASSED] - StartDate = getText(findTestObject("Created Reports Objects/StartDate")): Text of object 'Object Repository/Created Reports Objects/StartDate' is: 'Start Date:'

2020-03-17 15:29:58 - [MESSAGE][PASSED] - Text of object 'Object Repository/Created Reports Objects/StartDate' is: 'Start Date:'

2020-03-17 15:29:58 - [TEST_STEP][PASSED] - EndDate = getText(findTestObject("Created Reports Objects/EndDate")): Text of object 'Object Repository/Created Reports Objects/EndDate' is: 'End Date:'

2020-03-17 15:29:59 - [MESSAGE][PASSED] - Text of object 'Object Repository/Created Reports Objects/EndDate' is: 'End Date:'

2020-03-17 15:29:59 - [TEST_STEP][PASSED] - presentBy = PresentBy: null

2020-03-17 15:29:59 - [TEST_STEP][PASSED] - if (presentBy.equalsIgnoreCase("Day")): null

2020-03-17 15:29:59 - [TEST_STEP][PASSED] - if (StartDate.equalsIgnoreCase("Start Date:") && EndDate.equalsIgnoreCase("End Date:")): null

2020-03-17 15:29:59 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CreatedReports/setStartDate - Copy"), ["StartMonthYear":stCalStartMonthYear, "StartDate":stCalStartDate], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/setStartDate - Copy' successfully

2020-03-17 15:29:59 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CreatedReports/setStartDate - Copy: Test Cases/ReportBuilder_Pages/CreatedReports/setStartDate - Copy

2020-03-17 15:29:59 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("ReportBuilderUI/StartDatePicker"), 5): Object 'Object Repository/ReportBuilderUI/StartDatePicker' is clickable

2020-03-17 15:29:59 - [MESSAGE][PASSED] - Object 'Object Repository/ReportBuilderUI/StartDatePicker' is clickable

2020-03-17 15:29:59 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/StartDatePicker")): Object: 'Object Repository/ReportBuilderUI/StartDatePicker' is clicked on

2020-03-17 15:30:00 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/StartDatePicker' is clicked on

2020-03-17 15:30:00 - [TEST_STEP][PASSED] - monthYear = StartMonthYear: null

2020-03-17 15:30:00 - [TEST_STEP][PASSED] - while (!(getText(findTestObject("ReportBuilderUI/MonthValue")).equalsIgnoreCase(monthYear))): null

2020-03-17 15:30:00 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Mar, 2020'

2020-03-17 15:30:00 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/cld_backbtn")): Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Feb, 2020'

2020-03-17 15:30:01 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/cld_backbtn' is clicked on

2020-03-17 15:30:01 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Feb, 2020'

2020-03-17 15:30:01 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/cld_backbtn")): Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Jan, 2020'

2020-03-17 15:30:02 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/cld_backbtn' is clicked on

2020-03-17 15:30:02 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Jan, 2020'

2020-03-17 15:30:02 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/cld_backbtn")): Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Dec, 2019'

2020-03-17 15:30:03 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/cld_backbtn' is clicked on

2020-03-17 15:30:03 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Dec, 2019'

2020-03-17 15:30:03 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/cld_backbtn")): Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Nov, 2019'

2020-03-17 15:30:04 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/cld_backbtn' is clicked on

2020-03-17 15:30:04 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Nov, 2019'

2020-03-17 15:30:04 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/cld_backbtn")): Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Oct, 2019'

2020-03-17 15:30:05 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/cld_backbtn' is clicked on

2020-03-17 15:30:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/MonthValue' is: 'Oct, 2019'

2020-03-17 15:30:05 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2020-03-17 15:30:05 - [TEST_STEP][PASSED] - picker = driver.findElement(By.xpath("(//div[@class='dp-calendar-wrapper'])[1]")): null

2020-03-17 15:30:05 - [TEST_STEP][PASSED] - Days = picker.findElements(By.tagName("div")): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - totalelementsfind = Days.size(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - flag = 0: null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - for ([i = 1, i < totalelementsfind, (i++)]): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - Days1 = get(i).findElements(By.xpath("//button[@class='dp-calendar-day dp-current-month']")): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - totalelementsfind1 = Days1.size(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - for ([j = 0, j < totalelementsfind1, (j++)]): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:06 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(StartDate)): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - get(j).click(): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - flag = 1: null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - break: null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - if (flag == 1): null

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - break: null

2020-03-17 15:30:07 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/setStartDate - Copy' successfully

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CreatedReports/setEndDate - Copy"), ["EndMonthYear":stCalEndMonthYear, "EndDate":stCalEndDate], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/setEndDate - Copy' successfully

2020-03-17 15:30:07 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CreatedReports/setEndDate - Copy: Test Cases/ReportBuilder_Pages/CreatedReports/setEndDate - Copy

2020-03-17 15:30:07 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("ReportBuilderUI/EndDatePicker"), 5): Object 'Object Repository/ReportBuilderUI/EndDatePicker' is clickable

2020-03-17 15:30:08 - [MESSAGE][PASSED] - Object 'Object Repository/ReportBuilderUI/EndDatePicker' is clickable

2020-03-17 15:30:08 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/EndDatePicker")): Object: 'Object Repository/ReportBuilderUI/EndDatePicker' is clicked on

2020-03-17 15:30:08 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/EndDatePicker' is clicked on

2020-03-17 15:30:08 - [TEST_STEP][PASSED] - while (!(getText(findTestObject("Object Repository/ReportBuilderUI/EndMonthValue")).equalsIgnoreCase(EndMonthYear))): null

2020-03-17 15:30:09 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/EndMonthValue' is: 'Mar, 2020'

2020-03-17 15:30:09 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/cld_backButttonEndMonth")): Text of object 'Object Repository/ReportBuilderUI/EndMonthValue' is: 'Feb, 2020'

2020-03-17 15:30:09 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/cld_backButttonEndMonth' is clicked on

2020-03-17 15:30:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/EndMonthValue' is: 'Feb, 2020'

2020-03-17 15:30:10 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/cld_backButttonEndMonth")): Text of object 'Object Repository/ReportBuilderUI/EndMonthValue' is: 'Jan, 2020'

2020-03-17 15:30:10 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/cld_backButttonEndMonth' is clicked on

2020-03-17 15:30:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/EndMonthValue' is: 'Jan, 2020'

2020-03-17 15:30:11 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/cld_backButttonEndMonth")): Text of object 'Object Repository/ReportBuilderUI/EndMonthValue' is: 'Dec, 2019'

2020-03-17 15:30:11 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/cld_backButttonEndMonth' is clicked on

2020-03-17 15:30:11 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/EndMonthValue' is: 'Dec, 2019'

2020-03-17 15:30:11 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/cld_backButttonEndMonth")): Text of object 'Object Repository/ReportBuilderUI/EndMonthValue' is: 'Nov, 2019'

2020-03-17 15:30:12 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/cld_backButttonEndMonth' is clicked on

2020-03-17 15:30:12 - [MESSAGE][PASSED] - Text of object 'Object Repository/ReportBuilderUI/EndMonthValue' is: 'Nov, 2019'

2020-03-17 15:30:12 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2020-03-17 15:30:12 - [TEST_STEP][PASSED] - picker = driver.findElement(By.xpath("(//div[@class='dp-calendar-wrapper'])[2]")): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - Days = picker.findElements(By.tagName("div")): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - totalelementsfind = Days.size(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - flag = 0: null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - for ([i = 1, i < totalelementsfind, (i++)]): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - Days1 = get(i).findElements(By.xpath("//button[@class='dp-calendar-day dp-current-month']")): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - totalelementsfind1 = Days1.size(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - for ([j = 0, j < totalelementsfind1, (j++)]): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:13 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:14 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - DayValue = get(j).getText(): null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - if (DayValue.equalsIgnoreCase(EndDate)): null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - get(j).click(): null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - flag = 1: null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - break: null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - if (flag == 1): null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - break: null

2020-03-17 15:30:15 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/setEndDate - Copy' successfully

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CreatedReports/Select stores"), ["StoreName":PCName], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Select stores' successfully

2020-03-17 15:30:15 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CreatedReports/Select stores: Test Cases/ReportBuilder_Pages/CreatedReports/Select stores

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2020-03-17 15:30:15 - [TEST_STEP][PASSED] - click(findTestObject("Created Reports Objects/drp_StoreSelector")): Object: 'Object Repository/Created Reports Objects/drp_StoreSelector' is clicked on

2020-03-17 15:30:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Created Reports Objects/drp_StoreSelector' is clicked on

2020-03-17 15:30:16 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("Created Reports Objects/btn_checkAll"), 5): Object 'Object Repository/Created Reports Objects/btn_checkAll' is clickable

2020-03-17 15:30:16 - [MESSAGE][PASSED] - Object 'Object Repository/Created Reports Objects/btn_checkAll' is clickable

2020-03-17 15:30:16 - [TEST_STEP][PASSED] - click(findTestObject("Created Reports Objects/btn_checkAll")): Object: 'Object Repository/Created Reports Objects/btn_checkAll' is clicked on

2020-03-17 15:30:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Created Reports Objects/btn_checkAll' is clicked on

2020-03-17 15:30:17 - [TEST_STEP][PASSED] - click(findTestObject("Created Reports Objects/link_uncheckAll")): Object: 'Object Repository/Created Reports Objects/link_uncheckAll' is clicked on

2020-03-17 15:30:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Created Reports Objects/link_uncheckAll' is clicked on

2020-03-17 15:30:17 - [TEST_STEP][PASSED] - click(findTestObject("Created Reports Objects/input_SearchStores")): Object: 'Object Repository/Created Reports Objects/input_SearchStores' is clicked on

2020-03-17 15:30:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Created Reports Objects/input_SearchStores' is clicked on

2020-03-17 15:30:18 - [TEST_STEP][PASSED] - setText(findTestObject("Created Reports Objects/input_SearchStores"), StoreName): Text 'Union Ave' is set on object 'Object Repository/Created Reports Objects/input_SearchStores'

2020-03-17 15:30:19 - [MESSAGE][PASSED] - Text 'Union Ave' is set on object 'Object Repository/Created Reports Objects/input_SearchStores'

2020-03-17 15:30:19 - [TEST_STEP][PASSED] - PCName = StoreName: null

2020-03-17 15:30:19 - [TEST_STEP][PASSED] - StoreInList = driver.findElement(By.xpath("(//span[contains(text(),'" + PCName + "')])[1]")): null

2020-03-17 15:30:19 - [TEST_STEP][PASSED] - StoreInList.click(): null

2020-03-17 15:30:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Select stores' successfully

2020-03-17 15:30:20 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CreatedReports/HitRefresh"), [:], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/HitRefresh' successfully

2020-03-17 15:30:20 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CreatedReports/HitRefresh: Test Cases/ReportBuilder_Pages/CreatedReports/HitRefresh

2020-03-17 15:30:20 - [TEST_STEP][PASSED] - click(findTestObject("ReportBuilderUI/btn_Refresh")): Object: 'Object Repository/ReportBuilderUI/btn_Refresh' is clicked on

2020-03-17 15:30:20 - [MESSAGE][PASSED] - Object: 'Object Repository/ReportBuilderUI/btn_Refresh' is clicked on

2020-03-17 15:30:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/HitRefresh' successfully

2020-03-17 15:30:20 - [TEST_STEP][PASSED] - assert true: null

2020-03-17 15:30:20 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Date Picker is displayed as defined Data Grain - Copy' successfully

2020-03-17 15:30:20 - [TEST_STEP][PASSED] - NoOfDaysFromReports = []: null

2020-03-17 15:30:20 - [TEST_STEP][FAILED] - NoOfDaysFromReports = callTestCase(findTestCase("ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by"), [:], CONTINUE_ON_FAILURE): Unable to call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' (Root cause: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
)

2020-03-17 15:30:20 - [TEST_CASE][ERROR] - Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by: Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by FAILED.
Reason:
java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)


2020-03-17 15:30:21 - [TEST_STEP][PASSED] - TotalDays = []: null

2020-03-17 15:30:21 - [TEST_STEP][PASSED] - OnlyDays = []: null

2020-03-17 15:30:21 - [TEST_STEP][PASSED] - DayWiseDate = []: null

2020-03-17 15:30:21 - [TEST_STEP][PASSED] - NoWeeks = []: null

2020-03-17 15:30:21 - [TEST_STEP][PASSED] - presentBy = PresentBy: null

2020-03-17 15:30:21 - [TEST_STEP][PASSED] - if (presentBy.equalsIgnoreCase("Day")): null

2020-03-17 15:30:21 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2020-03-17 15:30:21 - [TEST_STEP][PASSED] - HeaderRow = driver.findElement(By.xpath("(//thead[@class="ui-table-thead"])[2]")): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - Headers = HeaderRow.findElements(By.tagName("tr")): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - Days = get(0).findElements(By.tagName("th")): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - NoOfdaysSelected = Days.size(): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - println("****NoOfdaysSelected****" + NoOfdaysSelected): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - for ([i = 0, i < NoOfdaysSelected, (i++)]): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - DateElement = Days.get(i): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", DateElement): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - FirstDate = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - println("FirstDate" + FirstDate): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - TotalDays.add(FirstDate): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - dateToBeSplited = TotalDays[i]: null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - OnlyDays = dateToBeSplited.split("/"): null

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - FinalDay = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:33 - [MESSAGE][FAILED] - Unable to call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' (Root cause: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
)

2020-03-17 15:30:33 - [TEST_STEP][PASSED] - callTestCase(findTestCase("ReportBuilder_Pages/CreatedReports/Verify all added columns in report is same as added during set up"), ["AddedColumnsSize":TotalNoOfColumnsAdded, "SetUpList":ColumnListNew], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify all added columns in report is same as added during set up' successfully

2020-03-17 15:30:34 - [TEST_CASE][PASSED] - Test Cases/ReportBuilder_Pages/CreatedReports/Verify all added columns in report is same as added during set up: Test Cases/ReportBuilder_Pages/CreatedReports/Verify all added columns in report is same as added during set up

2020-03-17 15:30:34 - [TEST_STEP][NOT_RUN] - click(findTestObject("Created Reports Objects/btn_collapseSidebar")): NOT_RUN: click(findTestObject("Created Reports Objects/btn_collapseSidebar"))

2020-03-17 15:30:34 - [MESSAGE][NOT_RUN] - NOT_RUN: click(findTestObject("Created Reports Objects/btn_collapseSidebar"))

2020-03-17 15:30:34 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2020-03-17 15:30:34 - [TEST_STEP][PASSED] - HeaderRow = driver.findElement(By.xpath("(//thead[@class="ui-table-thead"])[2]")): null

2020-03-17 15:30:34 - [TEST_STEP][PASSED] - Headers = HeaderRow.findElements(By.tagName("tr")): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - TotalAddedColumns = get(1).findElements(By.tagName("th")): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - NoOfdaysSelected = TotalAddedColumns.size(): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport = []: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumns = AddedColumnsSize: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - for ([i = 0, i < AddedColumns, (i++)]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:35 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - AddedColumnNameOnReport = TotalAddedColumns.get(i): null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je = driver: null

2020-03-17 15:30:36 - [TEST_STEP][PASSED] - je.executeScript("arguments[0].scrollIntoView()", AddedColumnNameOnReport): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - AddedColumnNameReport = replaceAll("", " ").replaceAll("
", " "): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - ColumnListFromReport.add(i, AddedColumnNameReport): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - println(ColumnListFromReport[i]): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - println("*************ON REPORT******************"): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - setupListNew = SetUpList: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - if (ColumnListFromReport.equals(setupListNew)): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - println("colums matched"): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - assert true: null

2020-03-17 15:30:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify all added columns in report is same as added during set up' successfully

2020-03-17 15:30:37 - [TEST_STEP][FAILED] - callTestCase(findTestCase("ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Fetch variable values from created report and do comapre with calendar values"), ["SetUpListToGetData":valuesFromCalendarDashboard, "DayWiseDates":NoOfDaysFromReports, "NoOfAddedColumns":TotalNoOfColumnsAdded], CONTINUE_ON_FAILURE): Unable to call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Fetch variable values from created report and do comapre with calendar values' (Root cause: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Fetch variable values from created report and do comapre with calendar values' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:80)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: groovy.lang.MissingMethodException: No signature of method: static com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.executeJavaScript() is applicable for argument types: (java.lang.String, org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement) values: [arguments[0].scrollIntoView(), [[[[[[CChromeDriver: chrome on WINDOWS (d529f8ecdaca8a543adab683ea036161)] -> xpath: (//thead[@class="ui-table-thead"])[2]]] -> tag name: tr]] -> tag name: th]]
Possible solutions: executeJavaScript(java.lang.String, java.util.List), executeJavaScript(java.lang.String, java.util.List, com.kms.katalon.core.model.FailureHandling)
	at Fetch variable values from created report and do comapre with calendar values.run(Fetch variable values from created report and do comapre with calendar values:180)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
)

2020-03-17 15:30:37 - [TEST_CASE][ERROR] - Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Fetch variable values from created report and do comapre with calendar values: Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Fetch variable values from created report and do comapre with calendar values FAILED.
Reason:
groovy.lang.MissingMethodException: No signature of method: static com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.executeJavaScript() is applicable for argument types: (java.lang.String, org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement) values: [arguments[0].scrollIntoView(), [[[[[[CChromeDriver: chrome on WINDOWS (d529f8ecdaca8a543adab683ea036161)] -> xpath: (//thead[@class="ui-table-thead"])[2]]] -> tag name: tr]] -> tag name: th]]
Possible solutions: executeJavaScript(java.lang.String, java.util.List), executeJavaScript(java.lang.String, java.util.List, com.kms.katalon.core.model.FailureHandling)
	at Fetch variable values from created report and do comapre with calendar values.run(Fetch variable values from created report and do comapre with calendar values:180)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:80)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)


2020-03-17 15:30:37 - [TEST_STEP][PASSED] - NetSalesFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - NetSalesLastYearFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - BudgetedSalesFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - GuestCountFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - GuestCountLastYearFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - GuestCountBudgetFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - AvgCheckFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - AvgCheckLastYearFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - AvgCheckBudgetFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - LaborFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - LaborLastYearFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - LaborBudgetFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - AllVariablesFromReport = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - index = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - NewIndex = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - CompareNetSales = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - CompareNetSalesLY = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - CompareGuestCount = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - ComapreGuestCountLY = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - CompareAvgTck = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - CompareAvgTckLY = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - CompareLaborCostTY = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - CompareLaborCostLY = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - CompareSalesBudget = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - fecthDates = []: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - allvaluesFromCal = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - allvaluesFromCal = SetUpListToGetData: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - fecthDates = allvaluesFromCal.get("CalandarValues"): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - sizeOfColumns = NoOfAddedColumns: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - ValuesFromCalender = [:]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - ValuesFromCalender = allvaluesFromCal.get("VariableValues"): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - DateIndex = 0: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - StoreName = PCName: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - user = username: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - listForReportColumns = ["Net Sales $", "Net Sales LY $", "Sales Budget $", "Guest Count", "Guest LY Count", "Avg Check $", "Avg Check LY $", "Labor Cost, $", "Labor Cost LY, $"]: null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2020-03-17 15:30:37 - [TEST_STEP][PASSED] - delay(3): Delayed 3 second(s)

2020-03-17 15:30:40 - [MESSAGE][PASSED] - Delayed 3 second(s)

2020-03-17 15:30:40 - [TEST_STEP][PASSED] - if (user.equalsIgnoreCase("admin.insight360@analytix.com")): null

2020-03-17 15:30:40 - [TEST_STEP][PASSED] - else: null

2020-03-17 15:30:40 - [TEST_STEP][PASSED] - println("in else loop"): null

2020-03-17 15:30:40 - [TEST_STEP][PASSED] - Tabel = driver.findElement(By.xpath("(//tbody[@class='ui-table-tbody'])[2]")): null

2020-03-17 15:30:41 - [TEST_STEP][PASSED] - Rows = Tabel.findElements(By.tagName("tr")): null

2020-03-17 15:30:41 - [TEST_STEP][PASSED] - for ([j = 0, j < Rows.size(), (j++)]): null

2020-03-17 15:30:41 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:30:41 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:30:41 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:30:41 - [TEST_STEP][PASSED] - if (trim().length() > 8): null

2020-03-17 15:30:41 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:30:41 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - if (trim().length() > 8): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - VariableRow = Rows.get(j): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - cells = VariableRow.findElements(By.tagName("td")): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - Variablename = get(0).getText(): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - if (trim().length() > 8): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - gotStorename = length()).trim(): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - println(gotStorename): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - if (gotStorename.equalsIgnoreCase(StoreName)): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - NewIndex = j: null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - println("Here is new index value" + NewIndex): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - break: null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - HeaderRow = driver.findElement(By.xpath("(//thead[@class="ui-table-thead"])[2]")): null

2020-03-17 15:30:42 - [TEST_STEP][PASSED] - HeadersRowTotal = HeaderRow.findElements(By.tagName("tr")): null

2020-03-17 15:30:43 - [TEST_STEP][PASSED] - Headers = get(1).findElements(By.tagName("th")): null

2020-03-17 15:30:43 - [TEST_STEP][PASSED] - println(Headers.size()): null

2020-03-17 15:30:43 - [TEST_STEP][PASSED] - for ([i = 0, i < Headers.size(), (i++)]): null

2020-03-17 15:30:43 - [TEST_STEP][PASSED] - HeaderNameElement = Headers.get(i): null

2020-03-17 15:30:43 - [TEST_STEP][PASSED] - executeJavaScript("arguments[0].scrollIntoView()", HeaderNameElement): null

2020-03-17 15:30:43 - [MESSAGE][FAILED] - Unable to call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Fetch variable values from created report and do comapre with calendar values' (Root cause: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/Restaurant_Intranet_Dashboard_Page/Fetch variable values from created report and do comapre with calendar values' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:80)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: groovy.lang.MissingMethodException: No signature of method: static com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.executeJavaScript() is applicable for argument types: (java.lang.String, org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement) values: [arguments[0].scrollIntoView(), [[[[[[CChromeDriver: chrome on WINDOWS (d529f8ecdaca8a543adab683ea036161)] -> xpath: (//thead[@class="ui-table-thead"])[2]]] -> tag name: tr]] -> tag name: th]]
Possible solutions: executeJavaScript(java.lang.String, java.util.List), executeJavaScript(java.lang.String, java.util.List, com.kms.katalon.core.model.FailureHandling)
	at Fetch variable values from created report and do comapre with calendar values.run(Fetch variable values from created report and do comapre with calendar values:180)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
)

2020-03-17 15:30:43 - [TEST_STEP][PASSED] - Start listener action : afterTestcase: null]]></system-out>
         <system-err><![CDATA[2020-03-17 15:26:56 - [TEST_CASE][FAILED] - Test Cases/CrossLocationReportBuilder_TestCases/TC8_Create Daily Report with valid details and compare report values with calender for specific time period: Test Cases/CrossLocationReportBuilder_TestCases/TC8_Create Daily Report with valid details and compare report values with calender for specific time period FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' (Root cause: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:70)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more]]></system-err>
      </testcase>
      <system-out><![CDATA[2020-03-17 15:26:38 - [TEST_SUITE][FAILED] - Daily Report End to End Suit: Test Cases/CrossLocationReportBuilder_TestCases/TC8_Create Daily Report with valid details and compare report values with calender for specific time period FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' (Root cause: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:70)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more]]></system-out>
      <system-err><![CDATA[2020-03-17 15:26:38 - [TEST_SUITE][FAILED] - Daily Report End to End Suit: Test Cases/CrossLocationReportBuilder_TestCases/TC8_Create Daily Report with valid details and compare report values with calender for specific time period FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' (Root cause: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:70)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.callTestCase(CallTestCaseKeyword.groovy:81)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword.execute(CallTestCaseKeyword.groovy:44)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:72)
	at com.kms.katalon.core.keyword.BuiltinKeywords.callTestCase(BuiltinKeywords.groovy:334)
	at TC8_Create Daily Report with valid details and compare report values with calender for specific time period.run(TC8_Create Daily Report with valid details and compare report values with calender for specific time period:74)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1584438995230.run(TempTestSuite1584438995230.groovy:36)
Caused by: com.kms.katalon.core.exception.StepErrorException: Call Test Case 'Test Cases/ReportBuilder_Pages/CreatedReports/Verify Dates on report based on selected present data by' failed because of error(s)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:66)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.call(CallTestCaseKeyword.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:68)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: 1
	at Verify Dates on report based on selected present data by.run(Verify Dates on report based on selected present data by:82)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestCaseMain.runTestCase(TestCaseMain.java:114)
	at com.kms.katalon.core.keyword.builtin.CallTestCaseKeyword$_callTestCase_closure1.doCall(CallTestCaseKeyword.groovy:59)
	... 20 more]]></system-err>
   </testsuite>
</testsuites>
